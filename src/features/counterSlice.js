import { createSlice } from '@reduxjs/toolkit';



export const counterSlice = createSlice({
  name: 'counter',
  initialState: {
    value: null
  },
  // The `reducers` field lets us define reducers and generate associated actions
  reducers: {
    addUserDetails: (state, action) => {
      // Redux Toolkit allows us to write "mutating" logic in reducers. It
      // doesn't actually mutate the state because it uses the Immer library,
      // which detects changes to a "draft state" and produces a brand new
      // immutable state based off those changes
      state.value =  action.payload
    },
    removeDetails: (state) => {
      state.value = null;
    },
  
  },
  // The `extraReducers` field lets the slice handle actions defined elsewhere,
  // including actions generated by createAsyncThunk or in other slices.
  
});

export const { addUserDetails, removeDetails, addDetailsByAmount } = counterSlice.actions;

// The function below is called a selector and allows us to select a value from
// the state. Selectors can also be defined inline where they're used instead of
// in the slice file. For example: `useSelector((state: RootState) => state.counter.value)`
export const selectCount = (state) => state.counter.value;



export default counterSlice.reducer;
